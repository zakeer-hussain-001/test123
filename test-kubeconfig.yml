trigger: none  # No automatic trigger

pool:
  vmImage: 'ubuntu-latest'

variables:
  KUBECONFIG_PATH: '$(Build.ArtifactStagingDirectory)/kubeconfig'

steps:
# Step 1: Copy kubeconfig from service connection to a file
- task: DownloadSecureFile@1
  name: DownloadKubeconfig
  inputs:
    secureFile: 'MediaK8sJioGateNonProd1.25.kubeconfig' # If you have the kubeconfig stored as a secure file

# Step 2: Verify cluster connection (read-only)
- script: |
    echo "Using kubeconfig from service connection..."
    export KUBECONFIG=$(Build.ArtifactStagingDirectory)/MediaK8sJioGateNonProd1.25.kubeconfig
    kubectl cluster-info
    kubectl get nodes
  displayName: 'Test cluster connection'

# Step 3: Publish kubeconfig as artifact
- publish: $(Build.ArtifactStagingDirectory)/MediaK8sJioGateNonProd1.25.kubeconfig
  artifact: kubeconfig
  displayName: 'Publish kubeconfig'
